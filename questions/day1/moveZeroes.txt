//https://leetcode.com/problems/move-zeroes/description/

//Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.
//Note that you must do this in-place without making a copy of the array.

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        
        int nZero, i;
        i = 0;
        nZero=0;
        while(i < nums.size() && nZero < nums.size())
        {

            if(nums[i]!=0)
            {
                ++i;
            }else
            {
                if(nums[nZero]!= 0)
                {
                    int temp = nums[nZero];
                    nums[nZero] = nums[i];
                    nums[i] = temp;
                    ++nZero;
                    ++i;
                }
                else
                {
               ++nZero;
                }
            }
            nZero = max(nZero, i);
         }
    }
};









class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        
        for(int i=0, prevNonZero=0; i < nums.size();++i){
            if(nums[i]!=0){
                swap(nums[prevNonZero++], nums[i]);
            }
        }
       
    }
};