//https://leetcode.com/problems/merge-two-binary-trees

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* MergeTree(TreeNode *a, TreeNode *b)
    {
            if(a == NULL && b== NULL) return NULL;

        TreeNode *x = new TreeNode();
        if(a!= NULL && b!=NULL)
        {
            x->val = a->val;
            x->val += b->val;
            x->left = MergeTree(a->left, b->left);
            x->right = MergeTree(a->right, b->right);
        }else if(a==NULL){
            x->val = b->val;
            x->left = MergeTree(NULL, b->left);
            x->right = MergeTree(NULL, b->right);
        }else if(b==NULL){
            x->val = a->val;
            x->left = MergeTree(a->left, NULL);
            x->right = MergeTree(a->right, NULL);
        }else{
            return NULL;
        }
        return x;
    }
    TreeNode* mergeTrees(TreeNode* root1, TreeNode* root2) {
        
        return MergeTree(root1, root2);
    }
};